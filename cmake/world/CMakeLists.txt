PROJECT(world)
SET( prefix ${ROOT_PATH}/src/world )
SET(sources
  DBC/DBCStores.cpp
	AchievementMgr.cpp 
	CollideInterface.cpp  
	VoiceChatHandler.cpp 
	DayWatcherThread.cpp 
	CommonScheduleThread.cpp 
	ArenaTeam.cpp 
	DatabaseCleaner.cpp 
	ObjectStorage.cpp  
	AddonMgr.cpp 
	AIInterface.cpp 
	AIEvents.cpp
	AreaTrigger.cpp 
	Arenas.cpp 
	AuctionHouse.cpp 
	AuctionMgr.cpp 
	Battleground.cpp
	BattlegroundCommands.cpp 
	BattlegroundHandler.cpp 
	BattlegroundMgr.cpp 
	Channel.cpp 
	ChannelHandler.cpp 
	CharacterHandler.cpp 
	Chat.cpp 
	ChatHandler.cpp 
	CombatHandler.cpp 
	Entities/Container.cpp 
	Entities/Corpse.cpp 
	Entities/Creature.cpp 
	CreatureCommands.cpp
	Entities/Summons/Summon.cpp
	Entities/Summons/CompanionSummon.cpp
	Entities/Summons/GuardianSummon.cpp
	Entities/Summons/PossessedSummon.cpp
	Entities/Summons/TotemSummon.cpp
	Entities/Summons/WildSummon.cpp
	debugcmds.cpp 
	DuelHandler.cpp 
	Entities/DynamicObject.cpp 
	EquipmentSetMgr.cpp
	EventableObject.cpp 
	EventMgr.cpp 
	faction.cpp 
	Entities/GameObject.cpp 
	GMTicket.cpp 
	GMTicketCommands.cpp
	Gossip.cpp
	Group.cpp 
	GroupHandler.cpp 
	Guild.cpp 
	GuildHandler.cpp 
	HonorHandler.cpp 
	InstanceCommands.cpp 
	Entities/Item.cpp
	ItemCommands.cpp
	ItemHandler.cpp 
	ItemInterface.cpp 
	Level0.cpp 
	Level1.cpp 
	Level2.cpp 
	Level3.cpp 
	LfgHandler.cpp 
	LfgMgr.cpp 
	LootMgr.cpp 
	LocalizationMgr.cpp 
	LogonSocket.cpp 
	LogonCommHandler.cpp 
	MailMessage.cpp
	MailBox.cpp
	MailHandler.cpp
	MailSystem.cpp 
	MapCell.cpp 
	Map.cpp 
	MapScriptInterface.cpp 
	MapMgr.cpp 
	MessageRouter.cpp
	Messenger.cpp
	MiscHandler.cpp 
	MovementHandler.cpp 
	NPCHandler.cpp 
	Entities/Object.cpp 
	ObjectMgr.cpp 
	Opcodes.cpp 
	Entities/Pet.cpp 
	PetHandler.cpp 
	Entities/Player.cpp 
	PlayerCommands.cpp
	PlayerMessenger.cpp
	Entities/PlayerPacketWrapper.cpp 
	QueryHandler.cpp 
	Quest.cpp 
	QuestHandler.cpp 
	QuestMgr.cpp 
	QuestCommands.cpp 
	RaidHandler.cpp 
	RecallCommands.cpp 
	ReputationHandler.cpp 
	ScriptMgr.cpp 
	SocialHandler.cpp 
	SpeedDetector.cpp 
	SpellAuras.cpp 
	SpellTarget.cpp 
	Spell.cpp 
	StdAfx.cpp
	SummonHandler.cpp
	SpellEffects.cpp 
	SpellHandler.cpp 
	HackFixes.cpp 
	Stats.cpp 
	TaxiHandler.cpp 
	TaxiMgr.cpp 
	TerrainMgr.cpp 
	TradeHandler.cpp 
	TransporterHandler.cpp 
	Entities/Unit.cpp 
	UpdateBuilder.cpp
	Vehicle.cpp 
	VehicleHandler.cpp
	WayPoints.cpp 
	WeatherMgr.cpp 
	World.cpp 
	WorldCreator.cpp 
	WorldSession.cpp 
	WorldSocket.cpp 
	WorldStatesHandler.cpp
	WorldRunnable.cpp 
	WordFilter.cpp 
	Main.cpp 
	Master.cpp 
	CConsole.cpp 
	ConsoleCommands.cpp 
	ConsoleListener.cpp 
	WUtil.cpp 
	SpellProc.cpp
	SpellProc_DeathKnight.cpp
	SpellProc_Druid.cpp
	SpellProc_Hunter.cpp
	SpellProc_Items.cpp
	SpellProc_Mage.cpp
	SpellProc_Paladin.cpp
	SpellProc_Priest.cpp
	SpellProc_Rogue.cpp
	SpellProc_Shaman.cpp
	SpellProc_Warlock.cpp
	SpellProc_Warrior.cpp
	SpellMgr.cpp
	Spell_DeathKnight.cpp
	Spell_Druid.cpp
	Spell_Hunter.cpp
	Spell_Mage.cpp
	Spell_Paladin.cpp
	Spell_Priest.cpp
	Spell_Rogue.cpp
	Spell_Shaman.cpp
	Spell_Warlock.cpp
	Spell_Warrior.cpp
	Entities/DeathKnight.cpp
	Entities/Druid.cpp
	Entities/Hunter.cpp
	Entities/Mage.cpp
	Entities/Paladin.cpp
	Entities/Priest.cpp
	Entities/Rogue.cpp
	Entities/Shaman.cpp
	Entities/Warlock.cpp
	Entities/Warrior.cpp
	WowCrypt.cpp )

SET( headers
	AchievementMgr.h
	AddonMgr.h
	AIInterface.h
	AIEvents.h
	AreaTrigger.h
	Arenas.h
	ArenaTeam.h
	AuctionHouse.h
	AuctionMgr.h
	BaseConsole.h
	Battleground.h
	BattlegroundMgr.h
	ByteBufferExtension.h
	CConsole.h
	CellHandler.h
	Channel.h
	ChannelMgr.h
	Chat.h
	CollideInterface.h
	CommonScheduleThread.h
	Entities/Summons/CompanionSummon.h
	ConsoleCommands.h
	Entities/Container.h
	Entities/Corpse.h
	Entities/Creature.h
	CreatureCommands.h
	DatabaseCleaner.h
	DayWatcherThread.h
	DBC/DBCStores.h
	Entities/DeathKnight.h
	Definitions.h
	Entities/Druid.h
	Entities/DynamicObject.h
	EquipmentSetMgr.h
	Events.h
	EventableObject.h
	EventMgr.h
	faction.h
	Entities/GameObject.h
	Gossip.h
	Group.h
	Entities/Summons/GuardianSummon.h
	Guild.h
	HonorHandler.h
	Entities/Hunter.h
	Entities/Item.h
	ItemCommands.h
	ItemInterface.h
	ItemIterator.h
	ItemPrototype.h
	LfgMgr.h
	LocalizationMgr.h
	LocationVector.h
	LogonSocket.h
	LogonCommHandler.h
	LootMgr.h
	Entities/Mage.h
	MailMessage.h
	MailBox.h
	MailSystem.h
	MainServerDefines.h
	Map.h
	MapCell.h
	MapMgr.h
	MapScriptInterface.h
	Master.h
	MessageRouter.h
	Messenger.h
	MiscHandler.h
	NameTables.h
	NPCHandler.h
	Entities/Object.h
	ObjectMgr.h
	ObjectStorage.h
	Opcodes.h
	Entities/Paladin.h
	Entities/Pet.h
	Entities/Player.h
	Entities/PlayerCache.h
	PlayerCommands.h
	PlayerMessenger.h
	Entities/Summons/PossessedSummon.h
	Entities/Priest.h
	Quest.h
	QuestMgr.h
	Entities/Rogue.h
	ScriptMgr.h
	ScriptSetup.h
	Entities/Shaman.h
	Skill.h
	SkillNameMgr.h
	SpawnTimedEmotes.h
	SpeedDetector.h
	Spell.h
	SpellAuras.h
	SpellFailure.h
	SpellMgr.h
	SpellNameHashes.h
	SpellProc.h
	SpellTarget.h
	Stats.h
	StdAfx.h
	Entities/Summons/Summon.h
	SummonHandler.h
	TaxiMgr.h
	TerrainMgr.h
	Entities/Summons/TotemSummon.h
	TransporterHandler.h
	Entities/Unit.h
	UpdateBuilder.h
	UpdateFields.h
	UpdateMask.h
	Vehicle.h
	Entities/Warlock.h
	Entities/Warrior.h
	Waypoint.h
	WeatherMgr.h
	Entities/Summons/WildSummon.h
	WordFilter.h
	World.h
	WorldConfig.h
	WorldCreator.h
	WorldRunnable.h
	WorldSession.h
	WorldSocket.h
	WorldStatesHandler.h
	WorldStates.h
	WowCrypt.h
	WoWGuid.h
	WUtil.h
)
	

foreach(src IN ITEMS ${sources} )
  SET( SRCS ${SRCS} ${prefix}/${src} )
endforeach(src)
foreach(src IN ITEMS ${headers} )
  SET( HEADERS ${HEADERS} ${prefix}/${src} )
endforeach(src)

include(PCHSupport)
include_directories( ${GLOBAL_INCLUDE_DIRS} )
link_directories( ${DEPENDENCY_LIBS} ${EXTRA_LIBS_PATH} )

add_executable( ${PROJECT_NAME} ${SRCS} ${HEADERS} )

IF( CMAKE_GENERATOR MATCHES Visual*)
	ADD_NATIVE_PRECOMPILED_HEADER(${PROJECT_NAME} StdAfx.h ${prefix}/StdAfx.cpp)
ENDIF()
set_target_properties(${PROJECT_NAME} PROPERTIES ENABLE_EXPORTS TRUE)

add_dependencies( ${PROJECT_NAME} shared g3dlite vmaplib detour recast)
target_link_libraries( ${PROJECT_NAME} shared  g3dlite vmaplib detour recast ${PCRE_LIBRARIES} )
install(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION .)





